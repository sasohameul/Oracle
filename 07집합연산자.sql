--집합연산자
--UNION -합집합, UNION ALL - 합집합, INTERSECT -교칩합, MINUS -차집합

SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20; --미쉘이 중복이기 때문에, 중복제거

SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION ALL
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;-- 중복까지

SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
INTERSECT
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;--중복만(교집합)

SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
MINUS
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;--상행-하행, 차집합

--집합연산자는 컬럼수가 일치해야합니다.
SELECT FIRST_NAME, HIRE_DATE,LAST_NAME FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'--컬럼3개
UNION
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;--컬럼2개
--에러난다

--컬럼수가 일치한다면, 다양한 형태로 사용이 됩니다.
SELECT '홍길동'AS 이름, TO_CHAR(SYSDATE)AS 날짜 FROM DUAL
UNION ALL
SELECT '이순신','05/01/01' FROM DUAL
UNION ALL
SELECT '홍길자','06/02/02' FROM DUAL
UNION ALL
SELECT LAST_NAME, TO_CHAR(HIRE_DATE) FROM EMPLOYEES;
---------------------------------------------------------------------------

--분석함수 -행에 대한 결과를 출력하는 기능, over()와 함께 사용됩니다.
SELECT FIRST_NAME,
       SALARY, 
       RANK() OVER(ORDER BY SALARY DESC) AS 중복순위계산 , --중복 순위 계산
       DENSE_RANK() OVER(ORDER BY SALARY DESC) AS 중복없음, -- 중복순위 계산하지않음
       ROW_NUMBER() OVER(ORDER BY SALARY DESC) AS 데이터번호, --데이터의 번호
       COUNT(*) OVER() AS 전체데이터개수, --전체 데이터 개수
       ROWNUM AS 조회순서--조회가 일어난 순서
FROM EMPLOYEES; 




